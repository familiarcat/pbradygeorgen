Environment: production
Running in AWS Amplify: No
Node version: v20.19.1
Is standalone build: No
Is in standalone directory: Yes
Current directory: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone
Found pages/app directory: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/.next/server/pages
Initializing Next.js app with directory: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone
Extracted directory already exists: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted
Extracted directory already exists: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted
 ⚠ "next start" does not work with "output: standalone" configuration. Use "node .next/standalone/server.js" instead.
> Ready on http://localhost:3000
> Serving from directory: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone
> Available directories:
  - .DS_Store
  - .cache
  - .next
  - amplifyconfiguration.json
  - logs
  - node_modules
  - package.json
  - prompts
  - public
  - scripts
  - server.js
> Public directory contents:
  - .DS_Store
  - analyzed
  - cover-letters
  - default_resume.pdf
  - extracted
  - file.svg
  - globe.svg
  - index.html
  - next.svg
  - pdf-worker
  - pdfs
  - robots.txt
  - test-pdfs
  - uploads
  - vercel.svg
  - window.svg
📦✅ [Derrida:Cache:Hit] Loaded PDF fingerprint: c43f3278...
📦❌ [Derrida:Cache:Miss] No cache file found
📦✅ [Derrida:Cache:Hit] Loaded PDF fingerprint: c43f3278...
📦🗑️ [Derrida:Cache:Invalidate] Invalidated 2 cache items due to PDF change
📦✅ [Derrida:Cache:Hit] Loaded 0 items from cache
📦✅ [Derrida:Cache:Hit] Loaded PDF fingerprint: c43f3278...
📦🗑️ [Derrida:Cache:Invalidate] Invalidated 1 cache items due to PDF change
📦✅ [Derrida:Cache:Hit] Loaded 0 items from cache
Failed to import pdf-parse: Error: ENOENT: no such file or directory, open './test/data/05-versions-space.pdf'
    at 36188 (.next/server/app/api/cover-letter/route.js:99:632068)
    at t (.next/server/webpack-runtime.js:1:143)
    at 18832 (.next/server/app/api/cover-letter/route.js:19:39839)
    at t (.next/server/webpack-runtime.js:1:143)
    at r (.next/server/app/api/cover-letter/route.js:114:35882)
    at <unknown> (.next/server/app/api/cover-letter/route.js:114:35924)
    at t.X (.next/server/webpack-runtime.js:1:1285)
    at <unknown> (.next/server/app/api/cover-letter/route.js:114:35895) {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: './test/data/05-versions-space.pdf'
}
📦✅ [Derrida:Cache:Hit] Loaded PDF fingerprint: c43f3278...
📦❌ [Derrida:Cache:Miss] No cache file found
📦✅ [Derrida:Cache:Hit] Loaded PDF fingerprint: c43f3278...
📦🗑️ [Derrida:Cache:Invalidate] Invalidated 2 cache items due to PDF change
📦✅ [Derrida:Cache:Hit] Loaded 0 items from cache
📦✅ [Derrida:Cache:Hit] Loaded PDF fingerprint: c43f3278...
📦🗑️ [Derrida:Cache:Invalidate] Invalidated 1 cache items due to PDF change
📦✅ [Derrida:Cache:Hit] Loaded 0 items from cache
📝🔍 [Hesse:Summary:Start] Getting Cover Letter content
Cover Letter API called with forceRefresh=false, timestamp=null, includeMetadata=false, isAmplify=false
Content state loaded from file
📝⏳ [Hesse:Summary:Progress] Content state loaded from file
ContentStateService initialized
📝🔍 [Hesse:Summary:Start] Content state service initialized
[32m[2025-05-02T22:54:28.723Z] 😇🪐 [Dante:Paradiso:7:Saturn] ContentStateService initialized - beginning the journey[0m
Configuring Amplify for production environment (isAmplify: false)
Amplify configuration: {
  region: 'us-east-1',
  bucket: 'alexai-pdf-storage-prod',
  bucketRegion: 'us-east-1'
}
Amplify configured successfully
[32m[2025-05-02T22:54:28.724Z] 😇☀️ [Dante:Paradiso:4:Sun] Amplify configured successfully[0m
AmplifyStorageService initialized in local mode (no Amplify Storage support)
Using local file system for content
Calling getFormattedContent for cover_letter...
📝🔍 [Hesse:Summary:Start] Getting cover_letter content in markdown format
Starting getFormattedContent with contentType = cover_letter, format = markdown, forceRefresh = false
📝🔍 [Hesse:Summary:Start] Formatting Cover Letter content
Starting formatCoverLetterContent with forceRefresh = false
Read PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf (119425 bytes)
Cover Letter fingerprint comparison: { currentFingerprint: '21e6d762...', storedFingerprint: '21e6d762...' }
Cover Letter content freshness check: {
  fingerprintChanged: false,
  isProcessed: false,
  isAnalyzed: false,
  hasCoverLetter: true,
  isContentStale: true
}
Cover Letter content needs refresh: Content has not been processed
Calling processPdfContent with shouldRefresh = true
📝🔍 [Hesse:Summary:Start] Processing PDF content
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Extracting content from PDF
📝⏳ [Hesse:Summary:Progress] Extracting content from PDF
Content extracted in 136ms
📝⏳ [Hesse:Summary:Progress] Content extracted in 136ms
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing resume content with OpenAI
📦❌ [Derrida:Cache:Miss] Cache miss for key: resume-a...
🤖🔍 [Hesse:OpenAI:Request] Sending resume content to OpenAI for analysis
🤖✅ [Hesse:OpenAI:Response] OpenAI analysis completed in 11490ms
[32m[2025-05-02T22:54:40.359Z] 😇☀️ [Dante:Paradiso:4:Sun] OpenAI response received: OpenAI analysis completed in 11490ms[0m
[32m[2025-05-02T22:54:40.359Z] 😇☀️ [Dante:Paradiso:4:Sun] Resume content analyzed successfully with OpenAI[0m
📦🔄 [Derrida:Cache:Update] Saved 1 items to cache
📦🔄 [Derrida:Cache:Update] Stored item with key: resume-a...
Content analyzed in 11494ms
🧠✅ [Hesse:AI:Success] Content analyzed in 11494ms
[32m[2025-05-02T22:54:40.360Z] 😇☀️ [Dante:Paradiso:4:Sun] AI operation succeeded: Content analyzed in 11494ms[0m
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
PDF processing completed successfully
📝✅ [Hesse:Summary:Complete] PDF processing completed successfully
[32m[2025-05-02T22:54:40.361Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: PDF processing completed successfully[0m
processPdfContent result: {
  success: true,
  isStale: false,
  hasExtractedContent: true,
  hasAnalyzedContent: true
}
Loading analyzed content from /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content_analyzed.json
Successfully loaded analyzed content from file
Formatting Cover Letter content from analyzed data
Saving Cover Letter content to /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/cover_letter.md
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Cover Letter content formatted successfully (1756 characters) in 11636ms
[32m[2025-05-02T22:54:40.361Z] 😇🌈 [Dante:Paradiso:10:Empyrean] Cover Letter content formatted successfully[0m
📝✅ [Hesse:Summary:Complete] Cover Letter content formatted successfully
[32m[2025-05-02T22:54:40.361Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Cover Letter content formatted successfully[0m
getFormattedContent result: {
  success: true,
  isStale: true,
  contentLength: 1756,
  format: 'markdown',
  contentType: 'cover_letter'
}
Cover Letter content retrieved successfully (1756 characters)
[32m[2025-05-02T22:54:40.361Z] 😇☀️ [Dante:Paradiso:4:Sun] Cover Letter content retrieved successfully[0m
📝✅ [Hesse:Summary:Complete] Cover Letter content retrieved successfully
[32m[2025-05-02T22:54:40.361Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Cover Letter content retrieved successfully[0m
Serving static file: /_next/static/chunks/webpack-4757b1c2b78eaece.js
Serving static file: /_next/static/chunks/9569-ce2a097d471a3473.js
Serving static file: /_next/static/chunks/app/layout-fe53770b25a47078.js
Serving static file: /_next/static/chunks/2366.9889126656e2bec1.js
📝🔍 [Hesse:Summary:Start] Validating PDF content
[32m[2025-05-03T00:16:38.996Z] 😇☀️ [Dante:Paradiso:4:Sun] Starting content validation[0m
📝🔍 [Hesse:Summary:Start] Validating analyzed content
Content validation successful
📝✅ [Hesse:Summary:Complete] Content validation successful
[32m[2025-05-03T00:16:39.000Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Content validation successful[0m
[32m[2025-05-03T00:16:39.000Z] 😇☀️ [Dante:Paradiso:4:Sun] Content validation successful[0m
📝✅ [Hesse:Summary:Complete] Content validation successful
[32m[2025-05-03T00:16:39.000Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Content validation successful[0m
Serving static file: /_next/static/chunks/7696.174402caafc829b5.js
Serving static file: /_next/static/chunks/5631.8f6beee2cc7c8262.js
🔄 GET /api/get-summary - Request received
🔄 Timestamp parameter: 1746231402418
🔄 Force refresh: Yes
📄 Using PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf
📊 Size: 119425 bytes
⏱️ Last modified: 2025-05-02T22:54:01.150Z
📦🔍 [Derrida:Cache:Check] Getting extracted PDF content
📄 PDF file being processed: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf
📊 PDF size: 119425 bytes
⏱️ PDF last modified: 2025-05-02T22:54:01.150Z
PDF Extraction: PDF file information {"path":"/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resum...
📦🔍 [Derrida:Cache:Check] Checking PDF content freshness
PDF Extraction: PDF file information {"path":"/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resum...
PDF Extraction: Found stored content fingerprint {"fingerprint":"c43f3278..."}...
PDF Extraction Warning: PDF content is stale due to fingerprint mismatch { currentFingerprint: '98624610...', storedFingerprint: 'c43f3278...' }
🔑 Content fingerprint: 98624610...
🔄 Content is stale: Yes
🔄 Force refresh requested: Yes
🔄 Always force refresh: Yes
PDF Extraction: Content fingerprint check {"fingerprint":"98624610...","isStale":true,"forceRefresh":true}...
🔄 Refreshing PDF content: content is stale
PDF Extraction: Forcing content refresh to ensure fresh data 
🔄 Starting forced content refresh
📦🗑️ [Derrida:Cache:Invalidate] Forcing PDF content refresh
📄 Processing PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf
📊 PDF size: 119425 bytes
⏱️ PDF last modified: 2025-05-02T22:54:01.150Z
🔑 Generated content fingerprint: 98624610...
PDF Extraction: PDF Extraction Logger initialized 
PDF Extraction: Starting PDF content refresh 
PDF Extraction: Saved content fingerprint {"fingerprint":"98624610..."}...
🔍 Running text extraction script: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-text-improved.js
PDF Extraction: Running text extraction script {"script":"/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pd...
⏱️ Text extraction completed in 176ms
✅ Text extraction successful (3327 characters)
📝 Text preview: "BENJAMIN STEIN WORK EXPERIENCE CLINICAL INFORMATICS SPECIALIST Homer G. Phillips Memorial Hospital 1320 N Jefferson Ave, St. Louis, MO 63106 Clinical Informatics Specialist MAR 2023 - Current 2143 Alf..."
PDF Extraction: Text extraction successful {"preview":"BENJAMIN STEIN WORK EXPERIENCE CLINICAL INFORMATICS SPECIALIST Homer G. Phillips Memoria...
✅ Markdown generation successful (116 characters)
📝 Markdown preview: "# Professional Resume

---

*This document was automatically extracted from a PDF resume.*
*Generated on: 5/2/2025*
..."
PDF Extraction: Markdown generation successful {"preview":"# Professional Resume\n\n---\n\n*This document was automatically extracted from a PDF re...
PDF Extraction: Extracting font information 
PDF Extraction: Font extraction successful 
PDF Extraction: Extracting color information 
[31m[2025-05-03T00:16:42.799Z] 👑🌊 [Dante:Inferno:2:Lust] PDF Extraction: Color extraction failed[0m
PDF Extraction Error: Color extraction failed {
  error: [Error: Command failed: node /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf
  Error extracting colors: Error: Setting up fake worker failed: "Cannot find module '/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/node_modules/pdfjs-dist/build/pdf.worker.js'
  Require stack:
  - /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js
  - /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js".
      at /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js:1927:36
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
  Color extraction failed: Error: Setting up fake worker failed: "Cannot find module '/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/node_modules/pdfjs-dist/build/pdf.worker.js'
  Require stack:
  - /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js
  - /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js".
      at /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js:1927:36
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
  ] {
    code: 1,
    killed: false,
    signal: null,
    cmd: 'node /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf',
    stdout: 'Extracting colors from: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf\n',
    stderr: `Error extracting colors: Error: Setting up fake worker failed: "Cannot find module '/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/node_modules/pdfjs-dist/build/pdf.worker.js'\n` +
      'Require stack:\n' +
      '- /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js\n' +
      '- /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js".\n' +
      '    at /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js:1927:36\n' +
      '    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
      `Color extraction failed: Error: Setting up fake worker failed: "Cannot find module '/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/node_modules/pdfjs-dist/build/pdf.worker.js'\n` +
      'Require stack:\n' +
      '- /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js\n' +
      '- /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js".\n' +
      '    at /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js:1927:36\n' +
      '    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n'
  }
}
PDF Extraction: Saved build info file 

📋 PDF EXTRACTION SUMMARY
=======================
📄 PDF: default_resume.pdf
📊 Size: 119425 bytes
⏱️ Last Modified: 2025-05-02T22:54:01.150Z
🔑 Content Fingerprint: 98624610...

📦 EXTRACTED CONTENT:
📝 Text: ✅
📄 Markdown: ✅
🔤 Fonts: ✅
🎨 Colors: ❌

⏱️ EXTRACTION TIMELINE:
✅ 7:16:42 PM: PDF Extraction Logger initialized
✅ 7:16:42 PM: Starting PDF content refresh
✅ 7:16:42 PM: Saved content fingerprint
✅ 7:16:42 PM: Running text extraction script
✅ 7:16:42 PM: Text extraction successful
✅ 7:16:42 PM: Markdown generation successful
✅ 7:16:42 PM: Extracting font information
✅ 7:16:42 PM: Font extraction successful
✅ 7:16:42 PM: Extracting color information
❌ 7:16:42 PM: Color extraction failed
✅ 7:16:42 PM: Saved build info file

=======================
📝🔍 [Hesse:Summary:Start] PDF Extraction Summary
✅ PDF content refresh completed successfully
📄 Text file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content.txt
📄 Markdown file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content.md
📄 Font info file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/font_info.json
📄 Color theme file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/color_theme.json
📄 Build info file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/build_info.json
📄 Content fingerprint file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/content_fingerprint.txt
[32m[2025-05-03T00:16:42.811Z] 😇☀️ [Dante:Paradiso:4:Sun] PDF content refreshed successfully[0m
✅ Successfully refreshed PDF content
PDF Extraction: Retrieved extracted content {"preview":"# Professional Resume\n\n---\n\n*This document was automatically extracted from a PDF re...
✅ Successfully extracted fresh content from PDF (116 characters)
📝 Content starts with: "# Professional Resume

---

*This document was aut..."
🧠⚠️ [Hesse:AI:Warning] OpenAI integration is disabled. Using fallback summary
📝🔍 [Hesse:Summary:Start] Getting Cover Letter content
Cover Letter API called with forceRefresh=true, timestamp=1746231402821, includeMetadata=false, isAmplify=false
Using local file system for content
Calling getFormattedContent for cover_letter...
📝🔍 [Hesse:Summary:Start] Getting cover_letter content in markdown format
Starting getFormattedContent with contentType = cover_letter, format = markdown, forceRefresh = true
📝🔍 [Hesse:Summary:Start] Formatting Cover Letter content
Starting formatCoverLetterContent with forceRefresh = true
Read PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf (119425 bytes)
Cover Letter fingerprint comparison: { currentFingerprint: '21e6d762...', storedFingerprint: '21e6d762...' }
Cover Letter content freshness check: {
  fingerprintChanged: false,
  isProcessed: true,
  isAnalyzed: true,
  hasCoverLetter: true,
  isContentStale: false
}
Cover Letter content needs refresh: Force refresh requested
Calling processPdfContent with shouldRefresh = true
📝🔍 [Hesse:Summary:Start] Processing PDF content
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Extracting content from PDF
📝⏳ [Hesse:Summary:Progress] Extracting content from PDF
Content extracted in 104ms
📝⏳ [Hesse:Summary:Progress] Content extracted in 104ms
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing resume content with OpenAI
📦✅ [Derrida:Cache:Hit] Cache hit for key: resume-a... (82 minutes old)
🧠⏳ [Hesse:AI:Progress] Using cached OpenAI analysis
Content analyzed in 0ms
🧠✅ [Hesse:AI:Success] Content analyzed in 0ms
[32m[2025-05-03T00:16:42.931Z] 😇☀️ [Dante:Paradiso:4:Sun] AI operation succeeded: Content analyzed in 0ms[0m
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
PDF processing completed successfully
📝✅ [Hesse:Summary:Complete] PDF processing completed successfully
[32m[2025-05-03T00:16:42.931Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: PDF processing completed successfully[0m
processPdfContent result: {
  success: true,
  isStale: false,
  hasExtractedContent: true,
  hasAnalyzedContent: true
}
Loading analyzed content from /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content_analyzed.json
Successfully loaded analyzed content from file
Formatting Cover Letter content from analyzed data
Saving Cover Letter content to /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/cover_letter.md
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Cover Letter content formatted successfully (1756 characters) in 106ms
[32m[2025-05-03T00:16:42.931Z] 😇🌈 [Dante:Paradiso:10:Empyrean] Cover Letter content formatted successfully[0m
📝✅ [Hesse:Summary:Complete] Cover Letter content formatted successfully
[32m[2025-05-03T00:16:42.931Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Cover Letter content formatted successfully[0m
getFormattedContent result: {
  success: true,
  isStale: false,
  contentLength: 1756,
  format: 'markdown',
  contentType: 'cover_letter'
}
Cover Letter content retrieved successfully (1756 characters)
[32m[2025-05-03T00:16:42.931Z] 😇☀️ [Dante:Paradiso:4:Sun] Cover Letter content retrieved successfully[0m
📝✅ [Hesse:Summary:Complete] Cover Letter content retrieved successfully
[32m[2025-05-03T00:16:42.932Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Cover Letter content retrieved successfully[0m
Serving static file: /_next/static/chunks/6245.f62eec8f5f393bac.js
📝🔍 [Hesse:Summary:Start] Server Action: Getting cover_letter content in markdown format
Server Action: getFormattedContent with contentType = cover_letter, format = markdown, forceRefresh = false
Content state loaded from file
📝⏳ [Hesse:Summary:Progress] Content state loaded from file
ContentStateService initialized
📝🔍 [Hesse:Summary:Start] Content state service initialized
[32m[2025-05-03T00:16:49.311Z] 😇🪐 [Dante:Paradiso:7:Saturn] ContentStateService initialized - beginning the journey[0m
[DEBUG] Server Action: Calling contentStateService.getFormattedContent(cover_letter, markdown, false)
📝🔍 [Hesse:Summary:Start] Getting cover_letter content in markdown format
Starting getFormattedContent with contentType = cover_letter, format = markdown, forceRefresh = false
📝🔍 [Hesse:Summary:Start] Formatting Cover Letter content
Starting formatCoverLetterContent with forceRefresh = false
Read PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf (119425 bytes)
Cover Letter fingerprint comparison: { currentFingerprint: '21e6d762...', storedFingerprint: '21e6d762...' }
Cover Letter content freshness check: {
  fingerprintChanged: false,
  isProcessed: true,
  isAnalyzed: true,
  hasCoverLetter: true,
  isContentStale: false
}
Cover Letter content is fresh, using cached content
Calling processPdfContent with shouldRefresh = false
📝🔍 [Hesse:Summary:Start] Processing PDF content
📝🔍 [Hesse:Summary:Start] Checking content freshness
Starting content freshness check
Read PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf (119425 bytes)
Fingerprint comparison: { currentFingerprint: '21e6d762...', storedFingerprint: '21e6d762...' }
Content freshness check details: {
  fingerprintChanged: false,
  isProcessed: true,
  isAnalyzed: true,
  isStale: false,
  lastUpdated: '2025-05-03T00:16:42.931Z'
}
📝⏳ [Hesse:Summary:Progress] Content is fresh and up-to-date
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Using cached content extraction
📝⏳ [Hesse:Summary:Progress] Using cached content extraction
Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing resume content with OpenAI
📦❌ [Derrida:Cache:Miss] Cache miss for key: resume-a...
🤖🔍 [Hesse:OpenAI:Request] Sending resume content to OpenAI for analysis
🤖✅ [Hesse:OpenAI:Response] OpenAI analysis completed in 14372ms
[32m[2025-05-03T00:17:03.687Z] 😇☀️ [Dante:Paradiso:4:Sun] OpenAI response received: OpenAI analysis completed in 14372ms[0m
[32m[2025-05-03T00:17:03.687Z] 😇☀️ [Dante:Paradiso:4:Sun] Resume content analyzed successfully with OpenAI[0m
📦🔄 [Derrida:Cache:Update] Saved 1 items to cache
📦🔄 [Derrida:Cache:Update] Stored item with key: resume-a...
Content analyzed in 14375ms
🧠✅ [Hesse:AI:Success] Content analyzed in 14375ms
[32m[2025-05-03T00:17:03.688Z] 😇☀️ [Dante:Paradiso:4:Sun] AI operation succeeded: Content analyzed in 14375ms[0m
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
PDF processing completed successfully
📝✅ [Hesse:Summary:Complete] PDF processing completed successfully
[32m[2025-05-03T00:17:03.688Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: PDF processing completed successfully[0m
processPdfContent result: {
  success: true,
  isStale: false,
  hasExtractedContent: true,
  hasAnalyzedContent: true
}
Loading analyzed content from /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content_analyzed.json
Successfully loaded analyzed content from file
Formatting Cover Letter content from analyzed data
Saving Cover Letter content to /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/cover_letter.md
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Cover Letter content formatted successfully (1797 characters) in 14377ms
[32m[2025-05-03T00:17:03.689Z] 😇🌈 [Dante:Paradiso:10:Empyrean] Cover Letter content formatted successfully[0m
📝✅ [Hesse:Summary:Complete] Cover Letter content formatted successfully
[32m[2025-05-03T00:17:03.689Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Cover Letter content formatted successfully[0m
[DEBUG] Server Action: getFormattedContent result: {
  success: true,
  hasContent: true,
  contentLength: 1797,
  hasDataUrl: false,
  dataUrlLength: 0,
  isStale: false,
  message: undefined
}
Server Action: cover_letter content in markdown format retrieved successfully in 14379ms
[32m[2025-05-03T00:17:03.689Z] 😇🌈 [Dante:Paradiso:10:Empyrean] Server Action: cover_letter content in markdown format retrieved successfully[0m
📝✅ [Hesse:Summary:Complete] Server Action: cover_letter content in markdown format retrieved successfully
[32m[2025-05-03T00:17:03.689Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Server Action: cover_letter content in markdown format retrieved successfully[0m
[DEBUG] Server Action: Preparing response with data (1797 chars)
🔄 GET /api/get-summary - Request received
🔄 Timestamp parameter: 1746231523403
🔄 Force refresh: Yes
📄 Using PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf
📊 Size: 119425 bytes
⏱️ Last modified: 2025-05-02T22:54:01.150Z
📦🔍 [Derrida:Cache:Check] Getting extracted PDF content
📄 PDF file being processed: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf
📊 PDF size: 119425 bytes
⏱️ PDF last modified: 2025-05-02T22:54:01.150Z
PDF Extraction: PDF file information {"path":"/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resum...
📦🔍 [Derrida:Cache:Check] Checking PDF content freshness
PDF Extraction: PDF file information {"path":"/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resum...
PDF Extraction: Found stored content fingerprint {"fingerprint":"98624610..."}...
PDF Extraction: PDF content is fresh 
📦✅ [Derrida:Cache:Hit] PDF content is fresh and up-to-date
🔑 Content fingerprint: 98624610...
🔄 Content is stale: No
🔄 Force refresh requested: Yes
🔄 Always force refresh: Yes
PDF Extraction: Content fingerprint check {"fingerprint":"98624610...","isStale":false,"forceRefresh":true}...
🔄 Refreshing PDF content: force refresh requested
PDF Extraction: Forcing content refresh to ensure fresh data 
🔄 Starting forced content refresh
📦🗑️ [Derrida:Cache:Invalidate] Forcing PDF content refresh
📄 Processing PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf
📊 PDF size: 119425 bytes
⏱️ PDF last modified: 2025-05-02T22:54:01.150Z
🔑 Generated content fingerprint: 98624610...
PDF Extraction: PDF Extraction Logger initialized 
PDF Extraction: Starting PDF content refresh 
PDF Extraction: Saved content fingerprint {"fingerprint":"98624610..."}...
🔍 Running text extraction script: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-text-improved.js
PDF Extraction: Running text extraction script {"script":"/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pd...
⏱️ Text extraction completed in 182ms
✅ Text extraction successful (3327 characters)
📝 Text preview: "BENJAMIN STEIN WORK EXPERIENCE CLINICAL INFORMATICS SPECIALIST Homer G. Phillips Memorial Hospital 1320 N Jefferson Ave, St. Louis, MO 63106 Clinical Informatics Specialist MAR 2023 - Current 2143 Alf..."
PDF Extraction: Text extraction successful {"preview":"BENJAMIN STEIN WORK EXPERIENCE CLINICAL INFORMATICS SPECIALIST Homer G. Phillips Memoria...
✅ Markdown generation successful (116 characters)
📝 Markdown preview: "# Professional Resume

---

*This document was automatically extracted from a PDF resume.*
*Generated on: 5/2/2025*
..."
PDF Extraction: Markdown generation successful {"preview":"# Professional Resume\n\n---\n\n*This document was automatically extracted from a PDF re...
PDF Extraction: Extracting font information 
PDF Extraction: Font extraction successful 
PDF Extraction: Extracting color information 
[31m[2025-05-03T00:18:43.790Z] 👑🌊 [Dante:Inferno:2:Lust] PDF Extraction: Color extraction failed[0m
PDF Extraction Error: Color extraction failed {
  error: [Error: Command failed: node /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf
  Error extracting colors: Error: Setting up fake worker failed: "Cannot find module '/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/node_modules/pdfjs-dist/build/pdf.worker.js'
  Require stack:
  - /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js
  - /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js".
      at /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js:1927:36
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
  Color extraction failed: Error: Setting up fake worker failed: "Cannot find module '/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/node_modules/pdfjs-dist/build/pdf.worker.js'
  Require stack:
  - /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js
  - /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js".
      at /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js:1927:36
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
  ] {
    code: 1,
    killed: false,
    signal: null,
    cmd: 'node /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf',
    stdout: 'Extracting colors from: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf\n',
    stderr: `Error extracting colors: Error: Setting up fake worker failed: "Cannot find module '/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/node_modules/pdfjs-dist/build/pdf.worker.js'\n` +
      'Require stack:\n' +
      '- /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js\n' +
      '- /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js".\n' +
      '    at /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js:1927:36\n' +
      '    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
      `Color extraction failed: Error: Setting up fake worker failed: "Cannot find module '/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/node_modules/pdfjs-dist/build/pdf.worker.js'\n` +
      'Require stack:\n' +
      '- /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js\n' +
      '- /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js".\n' +
      '    at /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js:1927:36\n' +
      '    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n'
  }
}
PDF Extraction: Saved build info file 

📋 PDF EXTRACTION SUMMARY
=======================
📄 PDF: default_resume.pdf
📊 Size: 119425 bytes
⏱️ Last Modified: 2025-05-02T22:54:01.150Z
🔑 Content Fingerprint: 98624610...

📦 EXTRACTED CONTENT:
📝 Text: ✅
📄 Markdown: ✅
🔤 Fonts: ✅
🎨 Colors: ❌

⏱️ EXTRACTION TIMELINE:
✅ 7:18:43 PM: PDF Extraction Logger initialized
✅ 7:18:43 PM: Starting PDF content refresh
✅ 7:18:43 PM: Saved content fingerprint
✅ 7:18:43 PM: Running text extraction script
✅ 7:18:43 PM: Text extraction successful
✅ 7:18:43 PM: Markdown generation successful
✅ 7:18:43 PM: Extracting font information
✅ 7:18:43 PM: Font extraction successful
✅ 7:18:43 PM: Extracting color information
❌ 7:18:43 PM: Color extraction failed
✅ 7:18:43 PM: Saved build info file

=======================
📝🔍 [Hesse:Summary:Start] PDF Extraction Summary
✅ PDF content refresh completed successfully
📄 Text file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content.txt
📄 Markdown file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content.md
📄 Font info file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/font_info.json
📄 Color theme file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/color_theme.json
📄 Build info file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/build_info.json
📄 Content fingerprint file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/content_fingerprint.txt
[32m[2025-05-03T00:18:43.792Z] 😇☀️ [Dante:Paradiso:4:Sun] PDF content refreshed successfully[0m
✅ Successfully refreshed PDF content
PDF Extraction: Retrieved extracted content {"preview":"# Professional Resume\n\n---\n\n*This document was automatically extracted from a PDF re...
✅ Successfully extracted fresh content from PDF (116 characters)
📝 Content starts with: "# Professional Resume

---

*This document was aut..."
🧠⚠️ [Hesse:AI:Warning] OpenAI integration is disabled. Using fallback summary
📝🔍 [Hesse:Summary:Start] Getting Cover Letter content
Cover Letter API called with forceRefresh=true, timestamp=1746231523803, includeMetadata=false, isAmplify=false
Using local file system for content
Calling getFormattedContent for cover_letter...
📝🔍 [Hesse:Summary:Start] Getting cover_letter content in markdown format
Starting getFormattedContent with contentType = cover_letter, format = markdown, forceRefresh = true
📝🔍 [Hesse:Summary:Start] Formatting Cover Letter content
Starting formatCoverLetterContent with forceRefresh = true
Read PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf (119425 bytes)
Cover Letter fingerprint comparison: { currentFingerprint: '21e6d762...', storedFingerprint: '21e6d762...' }
Cover Letter content freshness check: {
  fingerprintChanged: false,
  isProcessed: true,
  isAnalyzed: true,
  hasCoverLetter: true,
  isContentStale: false
}
Cover Letter content needs refresh: Force refresh requested
Calling processPdfContent with shouldRefresh = true
📝🔍 [Hesse:Summary:Start] Processing PDF content
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Extracting content from PDF
📝⏳ [Hesse:Summary:Progress] Extracting content from PDF
Content extracted in 101ms
📝⏳ [Hesse:Summary:Progress] Content extracted in 101ms
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing resume content with OpenAI
📦✅ [Derrida:Cache:Hit] Cache hit for key: resume-a... (84 minutes old)
🧠⏳ [Hesse:AI:Progress] Using cached OpenAI analysis
Content analyzed in 0ms
🧠✅ [Hesse:AI:Success] Content analyzed in 0ms
[32m[2025-05-03T00:18:43.908Z] 😇☀️ [Dante:Paradiso:4:Sun] AI operation succeeded: Content analyzed in 0ms[0m
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
PDF processing completed successfully
📝✅ [Hesse:Summary:Complete] PDF processing completed successfully
[32m[2025-05-03T00:18:43.909Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: PDF processing completed successfully[0m
processPdfContent result: {
  success: true,
  isStale: false,
  hasExtractedContent: true,
  hasAnalyzedContent: true
}
Loading analyzed content from /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content_analyzed.json
Successfully loaded analyzed content from file
Formatting Cover Letter content from analyzed data
Saving Cover Letter content to /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/cover_letter.md
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Cover Letter content formatted successfully (1756 characters) in 103ms
[32m[2025-05-03T00:18:43.909Z] 😇🌈 [Dante:Paradiso:10:Empyrean] Cover Letter content formatted successfully[0m
📝✅ [Hesse:Summary:Complete] Cover Letter content formatted successfully
[32m[2025-05-03T00:18:43.909Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Cover Letter content formatted successfully[0m
getFormattedContent result: {
  success: true,
  isStale: false,
  contentLength: 1756,
  format: 'markdown',
  contentType: 'cover_letter'
}
Cover Letter content retrieved successfully (1756 characters)
[32m[2025-05-03T00:18:43.909Z] 😇☀️ [Dante:Paradiso:4:Sun] Cover Letter content retrieved successfully[0m
📝✅ [Hesse:Summary:Complete] Cover Letter content retrieved successfully
[32m[2025-05-03T00:18:43.909Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Cover Letter content retrieved successfully[0m
📝🔍 [Hesse:Summary:Start] Server Action: Getting cover_letter content in markdown format
Server Action: getFormattedContent with contentType = cover_letter, format = markdown, forceRefresh = false
[DEBUG] Server Action: Calling contentStateService.getFormattedContent(cover_letter, markdown, false)
📝🔍 [Hesse:Summary:Start] Getting cover_letter content in markdown format
Starting getFormattedContent with contentType = cover_letter, format = markdown, forceRefresh = false
📝🔍 [Hesse:Summary:Start] Formatting Cover Letter content
Starting formatCoverLetterContent with forceRefresh = false
Read PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf (119425 bytes)
Cover Letter fingerprint comparison: { currentFingerprint: '21e6d762...', storedFingerprint: '21e6d762...' }
Cover Letter content freshness check: {
  fingerprintChanged: false,
  isProcessed: false,
  isAnalyzed: true,
  hasCoverLetter: true,
  isContentStale: true
}
Cover Letter content needs refresh: Content has not been processed
Calling processPdfContent with shouldRefresh = true
📝🔍 [Hesse:Summary:Start] Processing PDF content
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Extracting content from PDF
📝⏳ [Hesse:Summary:Progress] Extracting content from PDF
Content extracted in 90ms
📝⏳ [Hesse:Summary:Progress] Content extracted in 90ms
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing resume content with OpenAI
📦✅ [Derrida:Cache:Hit] Cache hit for key: resume-a... (2 minutes old)
🧠⏳ [Hesse:AI:Progress] Using cached OpenAI analysis
Content analyzed in 0ms
🧠✅ [Hesse:AI:Success] Content analyzed in 0ms
[32m[2025-05-03T00:18:46.970Z] 😇☀️ [Dante:Paradiso:4:Sun] AI operation succeeded: Content analyzed in 0ms[0m
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
PDF processing completed successfully
📝✅ [Hesse:Summary:Complete] PDF processing completed successfully
[32m[2025-05-03T00:18:46.970Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: PDF processing completed successfully[0m
processPdfContent result: {
  success: true,
  isStale: false,
  hasExtractedContent: true,
  hasAnalyzedContent: true
}
Loading analyzed content from /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content_analyzed.json
Successfully loaded analyzed content from file
Formatting Cover Letter content from analyzed data
Saving Cover Letter content to /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/cover_letter.md
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Cover Letter content formatted successfully (1797 characters) in 92ms
[32m[2025-05-03T00:18:46.971Z] 😇🌈 [Dante:Paradiso:10:Empyrean] Cover Letter content formatted successfully[0m
📝✅ [Hesse:Summary:Complete] Cover Letter content formatted successfully
[32m[2025-05-03T00:18:46.971Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Cover Letter content formatted successfully[0m
[DEBUG] Server Action: getFormattedContent result: {
  success: true,
  hasContent: true,
  contentLength: 1797,
  hasDataUrl: false,
  dataUrlLength: 0,
  isStale: true,
  message: undefined
}
Server Action: cover_letter content in markdown format retrieved successfully in 92ms
[32m[2025-05-03T00:18:46.971Z] 😇🌈 [Dante:Paradiso:10:Empyrean] Server Action: cover_letter content in markdown format retrieved successfully[0m
📝✅ [Hesse:Summary:Complete] Server Action: cover_letter content in markdown format retrieved successfully
[32m[2025-05-03T00:18:46.971Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Server Action: cover_letter content in markdown format retrieved successfully[0m
[DEBUG] Server Action: Preparing response with data (1797 chars)
🔄 GET /api/get-summary - Request received
🔄 Timestamp parameter: 1746231531318
🔄 Force refresh: Yes
📄 Using PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf
📊 Size: 119425 bytes
⏱️ Last modified: 2025-05-02T22:54:01.150Z
📦🔍 [Derrida:Cache:Check] Getting extracted PDF content
📄 PDF file being processed: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf
📊 PDF size: 119425 bytes
⏱️ PDF last modified: 2025-05-02T22:54:01.150Z
PDF Extraction: PDF file information {"path":"/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resum...
📦🔍 [Derrida:Cache:Check] Checking PDF content freshness
PDF Extraction: PDF file information {"path":"/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resum...
PDF Extraction: Found stored content fingerprint {"fingerprint":"98624610..."}...
PDF Extraction: PDF content is fresh 
📦✅ [Derrida:Cache:Hit] PDF content is fresh and up-to-date
🔑 Content fingerprint: 98624610...
🔄 Content is stale: No
🔄 Force refresh requested: Yes
🔄 Always force refresh: Yes
PDF Extraction: Content fingerprint check {"fingerprint":"98624610...","isStale":false,"forceRefresh":true}...
🔄 Refreshing PDF content: force refresh requested
PDF Extraction: Forcing content refresh to ensure fresh data 
🔄 Starting forced content refresh
📦🗑️ [Derrida:Cache:Invalidate] Forcing PDF content refresh
📄 Processing PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf
📊 PDF size: 119425 bytes
⏱️ PDF last modified: 2025-05-02T22:54:01.150Z
🔑 Generated content fingerprint: 98624610...
PDF Extraction: PDF Extraction Logger initialized 
PDF Extraction: Starting PDF content refresh 
PDF Extraction: Saved content fingerprint {"fingerprint":"98624610..."}...
🔍 Running text extraction script: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-text-improved.js
PDF Extraction: Running text extraction script {"script":"/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pd...
⏱️ Text extraction completed in 90ms
✅ Text extraction successful (3327 characters)
📝 Text preview: "BENJAMIN STEIN WORK EXPERIENCE CLINICAL INFORMATICS SPECIALIST Homer G. Phillips Memorial Hospital 1320 N Jefferson Ave, St. Louis, MO 63106 Clinical Informatics Specialist MAR 2023 - Current 2143 Alf..."
PDF Extraction: Text extraction successful {"preview":"BENJAMIN STEIN WORK EXPERIENCE CLINICAL INFORMATICS SPECIALIST Homer G. Phillips Memoria...
✅ Markdown generation successful (116 characters)
📝 Markdown preview: "# Professional Resume

---

*This document was automatically extracted from a PDF resume.*
*Generated on: 5/2/2025*
..."
PDF Extraction: Markdown generation successful {"preview":"# Professional Resume\n\n---\n\n*This document was automatically extracted from a PDF re...
PDF Extraction: Extracting font information 
PDF Extraction: Font extraction successful 
PDF Extraction: Extracting color information 
[31m[2025-05-03T00:18:51.603Z] 👑🌊 [Dante:Inferno:2:Lust] PDF Extraction: Color extraction failed[0m
PDF Extraction Error: Color extraction failed {
  error: [Error: Command failed: node /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf
  Error extracting colors: Error: Setting up fake worker failed: "Cannot find module '/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/node_modules/pdfjs-dist/build/pdf.worker.js'
  Require stack:
  - /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js
  - /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js".
      at /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js:1927:36
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
  Color extraction failed: Error: Setting up fake worker failed: "Cannot find module '/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/node_modules/pdfjs-dist/build/pdf.worker.js'
  Require stack:
  - /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js
  - /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js".
      at /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js:1927:36
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
  ] {
    code: 1,
    killed: false,
    signal: null,
    cmd: 'node /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf',
    stdout: 'Extracting colors from: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf\n',
    stderr: `Error extracting colors: Error: Setting up fake worker failed: "Cannot find module '/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/node_modules/pdfjs-dist/build/pdf.worker.js'\n` +
      'Require stack:\n' +
      '- /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js\n' +
      '- /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js".\n' +
      '    at /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js:1927:36\n' +
      '    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
      `Color extraction failed: Error: Setting up fake worker failed: "Cannot find module '/Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/node_modules/pdfjs-dist/build/pdf.worker.js'\n` +
      'Require stack:\n' +
      '- /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js\n' +
      '- /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/scripts/extract-pdf-colors.js".\n' +
      '    at /Users/bradygeorgen/Documents/workspace/pbradygeorgen/node_modules/pdfjs-dist/build/pdf.js:1927:36\n' +
      '    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n'
  }
}
PDF Extraction: Saved build info file 

📋 PDF EXTRACTION SUMMARY
=======================
📄 PDF: default_resume.pdf
📊 Size: 119425 bytes
⏱️ Last Modified: 2025-05-02T22:54:01.150Z
🔑 Content Fingerprint: 98624610...

📦 EXTRACTED CONTENT:
📝 Text: ✅
📄 Markdown: ✅
🔤 Fonts: ✅
🎨 Colors: ❌

⏱️ EXTRACTION TIMELINE:
✅ 7:18:51 PM: PDF Extraction Logger initialized
✅ 7:18:51 PM: Starting PDF content refresh
✅ 7:18:51 PM: Saved content fingerprint
✅ 7:18:51 PM: Running text extraction script
✅ 7:18:51 PM: Text extraction successful
✅ 7:18:51 PM: Markdown generation successful
✅ 7:18:51 PM: Extracting font information
✅ 7:18:51 PM: Font extraction successful
✅ 7:18:51 PM: Extracting color information
❌ 7:18:51 PM: Color extraction failed
✅ 7:18:51 PM: Saved build info file

=======================
📝🔍 [Hesse:Summary:Start] PDF Extraction Summary
✅ PDF content refresh completed successfully
📄 Text file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content.txt
📄 Markdown file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content.md
📄 Font info file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/font_info.json
📄 Color theme file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/color_theme.json
📄 Build info file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/build_info.json
📄 Content fingerprint file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/content_fingerprint.txt
[32m[2025-05-03T00:18:51.604Z] 😇☀️ [Dante:Paradiso:4:Sun] PDF content refreshed successfully[0m
✅ Successfully refreshed PDF content
PDF Extraction: Retrieved extracted content {"preview":"# Professional Resume\n\n---\n\n*This document was automatically extracted from a PDF re...
✅ Successfully extracted fresh content from PDF (116 characters)
📝 Content starts with: "# Professional Resume

---

*This document was aut..."
🧠⚠️ [Hesse:AI:Warning] OpenAI integration is disabled. Using fallback summary
📝🔍 [Hesse:Summary:Start] Getting Cover Letter content
Cover Letter API called with forceRefresh=true, timestamp=1746231531614, includeMetadata=false, isAmplify=false
Using local file system for content
Calling getFormattedContent for cover_letter...
📝🔍 [Hesse:Summary:Start] Getting cover_letter content in markdown format
Starting getFormattedContent with contentType = cover_letter, format = markdown, forceRefresh = true
📝🔍 [Hesse:Summary:Start] Formatting Cover Letter content
Starting formatCoverLetterContent with forceRefresh = true
Read PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf (119425 bytes)
Cover Letter fingerprint comparison: { currentFingerprint: '21e6d762...', storedFingerprint: '21e6d762...' }
Cover Letter content freshness check: {
  fingerprintChanged: false,
  isProcessed: true,
  isAnalyzed: true,
  hasCoverLetter: true,
  isContentStale: false
}
Cover Letter content needs refresh: Force refresh requested
Calling processPdfContent with shouldRefresh = true
📝🔍 [Hesse:Summary:Start] Processing PDF content
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Extracting content from PDF
📝⏳ [Hesse:Summary:Progress] Extracting content from PDF
Content extracted in 91ms
📝⏳ [Hesse:Summary:Progress] Content extracted in 91ms
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing resume content with OpenAI
📦✅ [Derrida:Cache:Hit] Cache hit for key: resume-a... (84 minutes old)
🧠⏳ [Hesse:AI:Progress] Using cached OpenAI analysis
Content analyzed in 0ms
🧠✅ [Hesse:AI:Success] Content analyzed in 0ms
[32m[2025-05-03T00:18:51.709Z] 😇☀️ [Dante:Paradiso:4:Sun] AI operation succeeded: Content analyzed in 0ms[0m
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
PDF processing completed successfully
📝✅ [Hesse:Summary:Complete] PDF processing completed successfully
[32m[2025-05-03T00:18:51.709Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: PDF processing completed successfully[0m
processPdfContent result: {
  success: true,
  isStale: false,
  hasExtractedContent: true,
  hasAnalyzedContent: true
}
Loading analyzed content from /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content_analyzed.json
Successfully loaded analyzed content from file
Formatting Cover Letter content from analyzed data
Saving Cover Letter content to /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/cover_letter.md
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Cover Letter content formatted successfully (1756 characters) in 91ms
[32m[2025-05-03T00:18:51.709Z] 😇🌈 [Dante:Paradiso:10:Empyrean] Cover Letter content formatted successfully[0m
📝✅ [Hesse:Summary:Complete] Cover Letter content formatted successfully
[32m[2025-05-03T00:18:51.709Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Cover Letter content formatted successfully[0m
getFormattedContent result: {
  success: true,
  isStale: false,
  contentLength: 1756,
  format: 'markdown',
  contentType: 'cover_letter'
}
Cover Letter content retrieved successfully (1756 characters)
[32m[2025-05-03T00:18:51.710Z] 😇☀️ [Dante:Paradiso:4:Sun] Cover Letter content retrieved successfully[0m
📝✅ [Hesse:Summary:Complete] Cover Letter content retrieved successfully
[32m[2025-05-03T00:18:51.710Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Cover Letter content retrieved successfully[0m
📝🔍 [Hesse:Summary:Start] Server Action: Getting cover_letter content in text format
Server Action: getFormattedContent with contentType = cover_letter, format = text, forceRefresh = false
[DEBUG] Server Action: Calling contentStateService.getFormattedContent(cover_letter, text, false)
📝🔍 [Hesse:Summary:Start] Getting cover_letter content in text format
Starting getFormattedContent with contentType = cover_letter, format = text, forceRefresh = false
📝🔍 [Hesse:Summary:Start] Formatting Cover Letter content
Starting formatCoverLetterContent with forceRefresh = false
Read PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf (119425 bytes)
Cover Letter fingerprint comparison: { currentFingerprint: '21e6d762...', storedFingerprint: '21e6d762...' }
Cover Letter content freshness check: {
  fingerprintChanged: false,
  isProcessed: true,
  isAnalyzed: true,
  hasCoverLetter: true,
  isContentStale: false
}
Cover Letter content is fresh, using cached content
Calling processPdfContent with shouldRefresh = false
📝🔍 [Hesse:Summary:Start] Processing PDF content
📝🔍 [Hesse:Summary:Start] Checking content freshness
Starting content freshness check
Read PDF file: /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/default_resume.pdf (119425 bytes)
Fingerprint comparison: { currentFingerprint: '21e6d762...', storedFingerprint: '21e6d762...' }
Content freshness check details: {
  fingerprintChanged: false,
  isProcessed: true,
  isAnalyzed: true,
  isStale: false,
  lastUpdated: '2025-05-03T00:18:46.971Z'
}
📝⏳ [Hesse:Summary:Progress] Content is fresh and up-to-date
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Using cached content extraction
📝⏳ [Hesse:Summary:Progress] Using cached content extraction
Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing content with ChatGPT
🧠🔍 [Hesse:AI:Start] Analyzing resume content with OpenAI
📦✅ [Derrida:Cache:Hit] Cache hit for key: resume-a... (2 minutes old)
🧠⏳ [Hesse:AI:Progress] Using cached OpenAI analysis
Content analyzed in 0ms
🧠✅ [Hesse:AI:Success] Content analyzed in 0ms
[32m[2025-05-03T00:18:54.801Z] 😇☀️ [Dante:Paradiso:4:Sun] AI operation succeeded: Content analyzed in 0ms[0m
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
PDF processing completed successfully
📝✅ [Hesse:Summary:Complete] PDF processing completed successfully
[32m[2025-05-03T00:18:54.801Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: PDF processing completed successfully[0m
processPdfContent result: {
  success: true,
  isStale: false,
  hasExtractedContent: true,
  hasAnalyzedContent: true
}
Loading analyzed content from /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/resume_content_analyzed.json
Successfully loaded analyzed content from file
Formatting Cover Letter content from analyzed data
Saving Cover Letter content to /Users/bradygeorgen/Documents/workspace/pbradygeorgen/.next/standalone/public/extracted/cover_letter.md
Content state saved to file
Content state updated
📝⏳ [Hesse:Summary:Progress] Content state updated
Cover Letter content formatted successfully (1797 characters) in 1ms
[32m[2025-05-03T00:18:54.801Z] 😇🌈 [Dante:Paradiso:10:Empyrean] Cover Letter content formatted successfully[0m
📝✅ [Hesse:Summary:Complete] Cover Letter content formatted successfully
[32m[2025-05-03T00:18:54.801Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Cover Letter content formatted successfully[0m
[DEBUG] Server Action: getFormattedContent result: {
  success: true,
  hasContent: true,
  contentLength: 1768,
  hasDataUrl: false,
  dataUrlLength: 0,
  isStale: false,
  message: undefined
}
Server Action: cover_letter content in text format retrieved successfully in 3ms
[32m[2025-05-03T00:18:54.802Z] 😇🌈 [Dante:Paradiso:10:Empyrean] Server Action: cover_letter content in text format retrieved successfully[0m
📝✅ [Hesse:Summary:Complete] Server Action: cover_letter content in text format retrieved successfully
[32m[2025-05-03T00:18:54.802Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Server Action: cover_letter content in text format retrieved successfully[0m
[DEBUG] Server Action: Preparing response with data (1768 chars)
📝🔍 [Hesse:Summary:Start] Formatting content as markdown
📝🔍 [Hesse:Summary:Start] Formatting content as markdown
📦❌ [Derrida:Cache:Miss] Cache miss for key: 27b03f0c...
📦❌ [Derrida:Cache:Miss] Cache miss for key: 27b03f0c...
🤖✅ [Hesse:OpenAI:Response] Received response from OpenAI in 6352ms
[32m[2025-05-03T00:19:11.135Z] 😇☀️ [Dante:Paradiso:4:Sun] OpenAI response received: Received response from OpenAI in 6352ms[0m
📦🔄 [Derrida:Cache:Update] Saved 1 items to cache
📦🔄 [Derrida:Cache:Update] Stored item with key: 27b03f0c...
📦🔄 [Derrida:Cache:Update] Stored formatted content with key: 27b03f0c...
📝✅ [Hesse:Summary:Complete] Successfully formatted content as markdown
[32m[2025-05-03T00:19:11.136Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Successfully formatted content as markdown[0m
📝✅ [Hesse:Summary:Complete] Content formatted as markdown
[32m[2025-05-03T00:19:11.136Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Content formatted as markdown[0m
📝🔍 [Hesse:Summary:Start] Validating PDF content
[32m[2025-05-03T00:21:22.152Z] 😇☀️ [Dante:Paradiso:4:Sun] Starting content validation[0m
📝🔍 [Hesse:Summary:Start] Validating analyzed content
Content validation successful
📝✅ [Hesse:Summary:Complete] Content validation successful
[32m[2025-05-03T00:21:22.153Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Content validation successful[0m
[32m[2025-05-03T00:21:22.153Z] 😇☀️ [Dante:Paradiso:4:Sun] Content validation successful[0m
📝✅ [Hesse:Summary:Complete] Content validation successful
[32m[2025-05-03T00:21:22.153Z] 😇☀️ [Dante:Paradiso:4:Sun] Summary generation completed: Content validation successful[0m
